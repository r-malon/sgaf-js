generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Local {
  id              Int    @id @default(autoincrement())
  nome            String @unique
  nome_normalized String @unique

  items Item[]

  @@map("Local")
}

model Contrato {
  id       Int    @id @default(autoincrement())
  numero   String @unique
  nome     String
  endereco String
  cpf      String

  afs AF[]

  @@map("Contrato")
}

model AF {
  id          Int      @id @default(autoincrement())
  contratoId  Int      @map("Contrato_id")
  principal   Boolean
  numero      String   @unique
  fornecedor  String
  descricao   String?
  data_inicio DateTime
  data_fim    DateTime
  status      Boolean

  contrato       Contrato @relation(fields: [contratoId], references: [id], onDelete: Restrict)
  items          Item[]
  principalItems Item[]   @relation("principalItems")
  valores        Valor[]

  @@index([contratoId])
  @@map("AF")
}

model Item {
  id              Int      @id @default(autoincrement())
  principalId     Int      @map("principal_id")
  localId         Int      @map("Local_id")
  descricao       String?
  banda_maxima    Int
  banda_instalada Int
  data_instalacao DateTime
  quantidade      Int
  status          Boolean

  local     Local   @relation(fields: [localId], references: [id], onDelete: Restrict)
  principal AF      @relation("principalItems", fields: [principalId], references: [id], onDelete: Restrict)
  afs       AF[]
  valores   Valor[]

  @@index([principalId])
  @@index([localId])
  @@map("Item")
}

model Valor {
  id          Int       @id @default(autoincrement())
  itemId      Int       @map("Item_id")
  afId        Int       @map("AF_id")
  valor       Int
  data_inicio DateTime
  data_fim    DateTime?

  item Item @relation(fields: [itemId], references: [id], onDelete: Restrict)
  af   AF   @relation(fields: [afId], references: [id], onDelete: Restrict)

  @@index([itemId])
  @@index([afId])
  @@map("Valor")
}
